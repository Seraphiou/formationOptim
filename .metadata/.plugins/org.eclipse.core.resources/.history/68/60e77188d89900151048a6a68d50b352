package mermory;

import java.lang.ref.PhantomReference;
import java.lang.ref.ReferenceQueue;
import java.lang.Runtime;

public class Memory {

	public static void main(String[] args) {
		System.out.println(Runtime.getRuntime().freeMemory());
		System.out.println(Runtime.getRuntime().totalMemory());
		System.out.println("used memory : " + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));

		Car car = new Car();
		ReferenceQueue<? super Car> q = new ReferenceQueue<>();
		PhantomReference<Car> phantomReference = new PhantomReference<Car>(car, q);
		int i = 0;
		while (phantomReference.get() != null) {
			System.gc();
			try {
				Thread.sleep(500);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			System.out.println("call number : "+ i++);
		}
		System.out.println("used memory : " + (Runtime.getRuntime().totalMemory() - Runtime.getRuntime().freeMemory()));
	}
}
